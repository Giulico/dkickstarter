/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CampaignFactory,
  CampaignFactoryInterface,
} from "../CampaignFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "minimum",
        type: "uint256",
      },
    ],
    name: "createCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deployedCampaigns",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeployedCampaigns",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061111b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063339d50a5146100465780634acb9d4f14610076578063ffa56a571461008b575b600080fd5b6100596100543660046101e0565b6100a0565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e6100ca565b60405161006d91906101f9565b61009e610099366004610302565b61012c565b005b600081815481106100b057600080fd5b6000918252602090912001546001600160a01b0316905081565b6060600080548060200260200160405190810160405280929190818152602001828054801561012257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610104575b5050505050905090565b60003384848460405161013e906101d3565b61014b94939291906103b5565b604051809103906000f080158015610167573d6000803e3d6000fd5b50600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905550505050565b610cea806103fc83390190565b6000602082840312156101f257600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561023a5783516001600160a01b031683529284019291840191600101610215565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261028657600080fd5b813567ffffffffffffffff808211156102a1576102a1610246565b604051601f8301601f19908116603f011681019082821181831017156102c9576102c9610246565b816040528381528660208588010111156102e257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561031757600080fd5b833567ffffffffffffffff8082111561032f57600080fd5b61033b87838801610275565b9450602086013591508082111561035157600080fd5b5061035e86828701610275565b925050604084013590509250925092565b6000815180845260005b8181101561039557602081850181015186830182015201610379565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03851681526080602082015260006103d7608083018661036f565b82810360408401526103e9818661036f565b9150508260608301529594505050505056fe6080604052600060065560006008553480156200001b57600080fd5b5060405162000cea38038062000cea8339810160408190526200003e916200014c565b600080546001600160a01b0319166001600160a01b03861617905560026200006784826200026d565b5060036200007683826200026d565b506001555050426004555062000339565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000af57600080fd5b81516001600160401b0380821115620000cc57620000cc62000087565b604051601f8301601f19908116603f01168101908282118183101715620000f757620000f762000087565b816040528381526020925086838588010111156200011457600080fd5b600091505b8382101562000138578582018301518183018401529082019062000119565b600093810190920192909252949350505050565b600080600080608085870312156200016357600080fd5b84516001600160a01b03811681146200017b57600080fd5b60208601519094506001600160401b03808211156200019957600080fd5b620001a7888389016200009d565b94506040870151915080821115620001be57600080fd5b50620001cd878288016200009d565b606096909601519497939650505050565b600181811c90821680620001f357607f821691505b6020821081036200021457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200026857600081815260208120601f850160051c81016020861015620002435750805b601f850160051c820191505b8181101562000264578281556001016200024f565b5050505b505050565b81516001600160401b0381111562000289576200028962000087565b620002a1816200029a8454620001de565b846200021a565b602080601f831160018114620002d95760008415620002c05750858301515b600019600386901b1c1916600185901b17855562000264565b600085815260208120601f198616915b828110156200030a57888601518255948401946001909101908401620002e9565b5085821015620003295787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6109a180620003496000396000f3fe6080604052600436106100d25760003560e01c80635badbe4c1161007f5780638a9cfd55116100595780638a9cfd5514610221578063937e09b114610241578063d7bb99ba14610257578063d7d1bbdb1461025f57600080fd5b80635badbe4c146101c55780637284e416146101db57806381d12c58146101f057600080fd5b8063426f953c116100b0578063426f953c14610155578063481c6a751461016b5780634a79d50c146101a357600080fd5b8063031b3677146100d7578063034410061461011c57806313a2e11714610131575b600080fd5b3480156100e357600080fd5b506101076100f2366004610612565b60076020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61012f61012a366004610636565b61027f565b005b34801561013d57600080fd5b5061014760085481565b604051908152602001610113565b34801561016157600080fd5b5061014760045481565b34801561017757600080fd5b5060005461018b906001600160a01b031681565b6040516001600160a01b039091168152602001610113565b3480156101af57600080fd5b506101b861034d565b6040516101139190610695565b3480156101d157600080fd5b5061014760065481565b3480156101e757600080fd5b506101b86103db565b3480156101fc57600080fd5b5061021061020b366004610636565b6103e8565b6040516101139594939291906106a8565b34801561022d57600080fd5b5061012f61023c36600461070e565b6104af565b34801561024d57600080fd5b5061014760015481565b61012f610541565b34801561026b57600080fd5b5061012f61027a366004610636565b61057e565b6000546001600160a01b0316331461029657600080fd5b60008181526005602052604090206002810154600160a01b900460ff161580156102d1575060026008546102ca91906107d9565b8160040154115b6102da57600080fd5b600281015460018201546040516001600160a01b039092169181156108fc0291906000818181858888f1935050505015801561031a573d6000803e3d6000fd5b5060020180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b17905550565b6002805461035a906107fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610386906107fb565b80156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b505050505081565b6003805461035a906107fb565b600560205260009081526040902080548190610403906107fb565b80601f016020809104026020016040519081016040528092919081815260200182805461042f906107fb565b801561047c5780601f106104515761010080835404028352916020019161047c565b820191906000526020600020905b81548152906001019060200180831161045f57829003601f168201915b5050505060018301546002840154600490940154929390926001600160a01b0382169250600160a01b90910460ff169085565b6000546001600160a01b031633146104c657600080fd5b6006546000908152600560205260409020806104e28582610884565b50600181018390556002810180547fffffffffffffffffffffff000000000000000000000000000000000000000000166001600160a01b038416179055600060048201819055600680549161053683610944565b919050555050505050565b600154341161054f57600080fd5b336000908152600760205260408120805460ff19166001179055600880549161057783610944565b9190505550565b600081815260056020908152604080832033845260079092529091205460ff1680156105bc575033600090815260038201602052604090205460ff16155b6105c557600080fd5b3360009081526003820160205260408120805460ff19166001179055600482018054916105f183610944565b91905055505050565b6001600160a01b038116811461060f57600080fd5b50565b60006020828403121561062457600080fd5b813561062f816105fa565b9392505050565b60006020828403121561064857600080fd5b5035919050565b6000815180845260005b8181101561067557602081850181015186830182015201610659565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061062f602083018461064f565b60a0815260006106bb60a083018861064f565b6020830196909652506001600160a01b039390931660408401529015156060830152608090910152919050565b634e487b7160e01b600052604160045260246000fd5b8035610709816105fa565b919050565b60008060006060848603121561072357600080fd5b833567ffffffffffffffff8082111561073b57600080fd5b818601915086601f83011261074f57600080fd5b813581811115610761576107616106e8565b604051601f8201601f19908116603f01168101908382118183101715610789576107896106e8565b816040528281528960208487010111156107a257600080fd5b826020860160208301376000602084830101528097505050505050602084013591506107d0604085016106fe565b90509250925092565b6000826107f657634e487b7160e01b600052601260045260246000fd5b500490565b600181811c9082168061080f57607f821691505b60208210810361082f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561087f57600081815260208120601f850160051c8101602086101561085c5750805b601f850160051c820191505b8181101561087b57828155600101610868565b5050505b505050565b815167ffffffffffffffff81111561089e5761089e6106e8565b6108b2816108ac84546107fb565b84610835565b602080601f8311600181146108e757600084156108cf5750858301515b600019600386901b1c1916600185901b17855561087b565b600085815260208120601f198616915b82811015610916578886015182559484019460019091019084016108f7565b50858210156109345787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001820161096457634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122081d55a8381470270cced7337098ce7e544f2bef88acb737d41c9a522e9fc754664736f6c63430008110033a26469706673582212200124e0cfdc22c462e0150752c19f860762a010b1c828fada626130d2cf16efae64736f6c63430008110033";

type CampaignFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CampaignFactory__factory extends ContractFactory {
  constructor(...args: CampaignFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CampaignFactory> {
    return super.deploy(overrides || {}) as Promise<CampaignFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CampaignFactory {
    return super.attach(address) as CampaignFactory;
  }
  override connect(signer: Signer): CampaignFactory__factory {
    return super.connect(signer) as CampaignFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignFactoryInterface {
    return new utils.Interface(_abi) as CampaignFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CampaignFactory {
    return new Contract(address, _abi, signerOrProvider) as CampaignFactory;
  }
}
